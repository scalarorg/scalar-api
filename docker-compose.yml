version: "3.9"
services:
  xchains-api:
    image: scalarorg/xchains-api:latest
    container_name: xchains-api
    ports:
      - "8090:8090"
    environment:
      - CONFIG=/home/xchains-api/config.yml
    volumes:
      - ./config/global-params.json:/home/xchains-api/global-params.json:Z
      - ./config/finality-providers.json:/home/xchains-api/finality-providers.json:Z
      - ./config/config-docker.yml:/home/xchains-api/config.yml:Z
      - ./bin/wait-for-service.sh:/bin/wait-for-service.sh
    entrypoint: "/bin/wait-for-service.sh rabbitmq:5672 -t 60 -- /bin/entrypoint.sh"
    depends_on:
      - postgresdb
      - mongodb
      - rabbitmq  

  postgresdb:
    restart: "unless-stopped"
    image: postgres:15-alpine
    container_name: postgresdb
    stop_grace_period: 1m
    # volumes:
    #   - ./postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    ports:
      - 5432:5432/tcp
    healthcheck:
      test: ["CMD", "nc", "-z", "-v", "localhost", "5432"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:latest
    container_name: mongodb
    hostname: mongodb
    ports:
      - "27017:27017"
    volumes:
      - ./bin/init-mongo.sh:/init-mongo.sh
    entrypoint: [ "/init-mongo.sh" ]
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # AMQP protocol port
      - "15672:15672" # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    #volumes:
    #  - "./rabbitmq_data:/var/lib/rabbitmq"
